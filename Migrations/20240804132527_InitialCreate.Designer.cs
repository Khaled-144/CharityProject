// <auto-generated />
using System;
using CharityProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CharityProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240804132527_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CharityProject.Models.Department", b =>
                {
                    b.Property<int>("departement_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("departement_id"));

                    b.Property<string>("departement_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("supervisor_id")
                        .HasColumnType("int");

                    b.HasKey("departement_id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("CharityProject.Models.Devices", b =>
                {
                    b.Property<int>("devices_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("devices_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("devices_id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("CharityProject.Models.ExternalTransaction", b =>
                {
                    b.Property<int>("external_transactions_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("external_transactions_id"));

                    b.Property<string>("case_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("communication")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("identity_number")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("receiving_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("receiving_number")
                        .HasColumnType("int");

                    b.Property<DateTime>("sending_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("sending_number")
                        .HasColumnType("int");

                    b.Property<string>("sending_party")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("external_transactions_id");

                    b.ToTable("ExternalTransactions");
                });

            modelBuilder.Entity("CharityProject.Models.Holiday", b =>
                {
                    b.Property<int>("holiday_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("holiday_id"));

                    b.Property<int>("allowedDuration")
                        .HasColumnType("int");

                    b.Property<string>("duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duration_Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("holiday_id");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("CharityProject.Models.HolidayHistory", b =>
                {
                    b.Property<int>("holidays_history_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("holidays_history_id"));

                    b.Property<DateOnly>("creation_date")
                        .HasColumnType("date");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<int>("emp_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("holiday_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("holidays_history_id");

                    b.HasIndex("holiday_id");

                    b.ToTable("holidays_history");
                });

            modelBuilder.Entity("CharityProject.Models.Letter", b =>
                {
                    b.Property<int>("letters_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("letters_id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("departement_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("from_emp_id")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("to_emp_id")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("letters_id");

                    b.ToTable("Letters");
                });

            modelBuilder.Entity("CharityProject.Models.OtherService", b =>
                {
                    b.Property<int>("service_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("service_id"));

                    b.Property<string>("service_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("service_id");

                    b.ToTable("OtherServices");
                });

            modelBuilder.Entity("CharityProject.Models.Referral", b =>
                {
                    b.Property<int>("referral_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("referral_id"));

                    b.Property<string>("comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("from_employee_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("referral_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("to_employee_id")
                        .HasColumnType("int");

                    b.Property<int>("transaction_id")
                        .HasColumnType("int");

                    b.HasKey("referral_id");

                    b.HasIndex("from_employee_id");

                    b.HasIndex("to_employee_id");

                    b.HasIndex("transaction_id");

                    b.ToTable("Referrals");
                });

            modelBuilder.Entity("CharityProject.Models.Transaction", b =>
                {
                    b.Property<int>("transaction_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("transaction_id"));

                    b.Property<DateTime?>("close_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("department_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("from_emp_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("to_emp_id")
                        .HasColumnType("int");

                    b.HasKey("transaction_id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CharityProject.Models.charter", b =>
                {
                    b.Property<int>("charter_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("charter_id"));

                    b.Property<string>("charter_info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("creation_date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("from_departement_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("receive_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("serial_number")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to_departement_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("to_emp_id")
                        .HasColumnType("int");

                    b.HasKey("charter_id");

                    b.ToTable("charter");
                });

            modelBuilder.Entity("CharityProject.Models.employee", b =>
                {
                    b.Property<int>("employee_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("employee_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("search_role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("employee_id");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("CharityProject.Models.employee_details", b =>
                {
                    b.Property<int>("employee_details_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("employee_details_id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("contract_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("departement_id")
                        .HasColumnType("int");

                    b.Property<string>("education_level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.Property<string>("files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("hire_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("identity_number")
                        .HasColumnType("int");

                    b.Property<DateTime?>("leave_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("national_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permission_position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("employee_details_id");

                    b.HasIndex("employee_id");

                    b.ToTable("employee_details");
                });

            modelBuilder.Entity("CharityProject.Models.salaries_history", b =>
                {
                    b.Property<int>("salaries_history_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("salaries_history_id"));

                    b.Property<double?>("absence_discount")
                        .HasColumnType("float");

                    b.Property<double>("base_salary")
                        .HasColumnType("float");

                    b.Property<double?>("bonus")
                        .HasColumnType("float");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("debt")
                        .HasColumnType("float");

                    b.Property<double?>("delay_discount")
                        .HasColumnType("float");

                    b.Property<int>("emp_id")
                        .HasColumnType("int");

                    b.Property<string>("exchange_statement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("facility_portion")
                        .HasColumnType("float");

                    b.Property<double?>("housing_allowances")
                        .HasColumnType("float");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("other_allowances")
                        .HasColumnType("float");

                    b.Property<double?>("other_discount")
                        .HasColumnType("float");

                    b.Property<double?>("overtime")
                        .HasColumnType("float");

                    b.Property<double?>("shared_portion")
                        .HasColumnType("float");

                    b.Property<double?>("transportaion_allowances")
                        .HasColumnType("float");

                    b.Property<int>("work_days")
                        .HasColumnType("int");

                    b.HasKey("salaries_history_id");

                    b.ToTable("salaries_history");
                });

            modelBuilder.Entity("CharityProject.Models.HolidayHistory", b =>
                {
                    b.HasOne("CharityProject.Models.Holiday", "holiday")
                        .WithMany()
                        .HasForeignKey("holiday_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("holiday");
                });

            modelBuilder.Entity("CharityProject.Models.Referral", b =>
                {
                    b.HasOne("CharityProject.Models.employee", "from_employee")
                        .WithMany()
                        .HasForeignKey("from_employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CharityProject.Models.employee", "to_employee")
                        .WithMany()
                        .HasForeignKey("to_employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CharityProject.Models.Transaction", "Transaction")
                        .WithMany("Referrals")
                        .HasForeignKey("transaction_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");

                    b.Navigation("from_employee");

                    b.Navigation("to_employee");
                });

            modelBuilder.Entity("CharityProject.Models.employee_details", b =>
                {
                    b.HasOne("CharityProject.Models.employee", "employee")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("CharityProject.Models.Transaction", b =>
                {
                    b.Navigation("Referrals");
                });
#pragma warning restore 612, 618
        }
    }
}
