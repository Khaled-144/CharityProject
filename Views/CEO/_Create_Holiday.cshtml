@model CharityProject.Models.HolidayHistory
<head>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Form with Conditional Employee Div</title>
	<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

</head>

<div class="modal fade" id="insertHolidayModal" role="dialog">
	<div class="modal-dialog modal-xl">
		<div class="modal-content ">
			<div class="modal-header flex justify-center items-center ">
				<button type="button" class="btn btn-danger" data-dismiss="modal">X</button>
				<h4 class="modal-title text-center w-full">إنشاء طلب جديد</h4>
			</div>
			<div class="modal-body align-content-center">
				<div class="col-md text-right" dir="rtl">
					<form asp-action="Create_Holiday" method="post" enctype="multipart/form-data">
						<div asp-validation-summary="ModelOnly" class="text-danger"></div>
						<div class="mb-4">
							<label for="subject" class="block text-gray-700 font-bold mb-2">موضوع الإجازة</label>
							<input type="text" id="subject" name="title" asp-for="title" required class="border border-gray-400 rounded-md p-2 w-full" placeholder="أدخل موضوع الإجازة">
						</div>

						<div class="mb-4 flex items-center">
							<label for="holidayType" class="text-gray-700 font-bold ml-2">نوع الإجازة</label>
							<select id="holidayType" required name="holiday_id" class="border border-gray-400 rounded-md p-2 w-28 px-10" onchange="handleHolidayTypeChange()">
								<option disabled selected>اختر نوع الإجازة</option>
								<option value="1">مرضية</option>
								<option value="2">سنوية</option>
								<option value="3">اضطرارية</option>
								<option value="4">استئذان</option>
							</select>
							<label id="holidayBalance" class="text-gray-700 font-bold mr-5">الرصيد المتبقي: </label>
						</div>
						<div id="normal-div" class="mb-4 flex items-center">
							<label for="counter" class="text-gray-700 font-bold mr-4" id="counterLabel">المدة</label>
							<div class="flex px-4">
								<button type="button" onclick="decrementCounter()" class="text-2xl">-</button>&nbsp;
								<input required type="number" id="counter" asp-for="duration" name="duration" class="w-12 p-2" readonly>&nbsp;
								<button type="button" onclick="incrementCounter()" class="text-2xl">+</button>
							</div>
							<span id="from-label" class="text-gray-700 font-bold mx-2">من</span>
							<input required type="date" id="start_date" asp-for="start_date" name="start_date" class="border border-gray-400 rounded-md p-2 w-1/4" onchange="updateDuration()"><br />
							<span id="to-label" class="text-gray-700 mr-4 ml-2 font-bold">إلى</span>
							<input required type="date" id="end_date" asp-for="end_date" name="end_date" class="border border-gray-400 rounded-md p-2 w-1/4" onchange="updateDuration()">
						</div>

						<div class="mb-4">
							<label for="notes" class="block text-gray-700 font-bold mb-2">الملاحظات</label>
							<input type="text" id="notes" name="description" asp-for="description" class="border border-gray-400 rounded-md p-2 w-full " placeholder="أدخل الملاحظات"></input>
						</div>

						<div class="mb-4">
							<label for="attachments" class="block text-gray-700 font-bold mb-2">المرفقات</label>
							<div class="flex">
								<input type="file" asp-for="files" id="attachment" name="files" class="border border-gray-400 rounded-md p-2 w-full">
							</div>
						</div>
						<div class="flex justify-center ">
							<button id="submitButton" class="bg-primaryButtons hover:bg-primaryButtons focus:ring-4 focus:outline-none focus:ring-emerald-300 dark:focus:ring-emerald-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 text-white font-bold py-2 px-4">رفع الطلب</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>
<script>
	document.addEventListener("DOMContentLoaded", function () {
		let currentDate = new Date();
		document.getElementById('start_date').value = currentDate.toISOString().split('T')[0];
		document.getElementById('end_date').value = currentDate.toISOString().split('T')[0];
		fetchRemainingHolidayBalance(); // Fetch balance when page loads
	});

	function handleHolidayTypeChange() {
		var holidayType = document.getElementById('holidayType').value;
		var fileInput = document.getElementById('attachment');
		var counterInput = document.getElementById('counter');
		var startDateInput = document.getElementById('start_date');
		var endDateInput = document.getElementById('end_date');
		var fromLabel = document.getElementById('from-label');
		var toLabel = document.getElementById('to-label');

		// Handle the attachment requirement based on holiday type
		if (holidayType === '1') { // Assuming '1' is for "مرضية"
			fileInput.required = true;
		} else {
			fileInput.required = false;
		}

		// Reset counter value
		counterInput.value = '0';

		// Display/Hide fields based on holiday type
		if (holidayType === '4') { // Assuming '4' is for "استئذان"
			startDateInput.style.display = 'none';
			endDateInput.style.display = 'none';
			fromLabel.style.display = 'none';
			toLabel.style.display = 'none';
			document.getElementById('counterLabel').textContent = 'المدة بالساعات';
			counterInput.setAttribute('min', '1');
			counterInput.setAttribute('max', '2'); // Max value for "استئذان"
		} else {
			startDateInput.style.display = 'inline';
			endDateInput.style.display = 'inline';
			fromLabel.style.display = 'inline';
			toLabel.style.display = 'inline';
			document.getElementById('counterLabel').textContent = 'المدة بالأيام';

			// Fetch and set the max value based on the selected holiday type
			fetchRemainingHolidayBalance();
		}
	}

	function fetchRemainingHolidayBalance() {
		var holidayTypeId = document.getElementById('holidayType').value;
		console.log(`Fetching balance for holidayTypeId: ${holidayTypeId}`);

		fetch(`/FinancialSustainabilityDevelopmentManager/GetRemainingHolidayBalance?holidayId=${holidayTypeId}`)
			.then(response => {
				console.log(`Response status: ${response.status}`);
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {
				console.log(`Received data: ${data}`);
				var counterInput = document.getElementById('counter');
				if (typeof data === 'number' && data >= 0) {
					document.getElementById('holidayBalance').textContent = `الرصيد المتبقي: ${data}`;
					counterInput.setAttribute('max', data);
					validateForm(); // Validate the form whenever balance is updated
				} else {
					console.error('Unexpected data format:', data);
					document.getElementById('holidayBalance').textContent = 'الرصيد المتبقي: غير معروف';
					counterInput.removeAttribute('max');
				}
			})
			.catch(error => {
				console.error('Error:', error);
				document.getElementById('holidayBalance').textContent = 'الرصيد المتبقي: غير معروف';
				document.getElementById('counter').removeAttribute('max');
			});
	}

	function incrementCounter() {
		const counterInput = document.getElementById('counter');
		const max = parseInt(counterInput.getAttribute('max'));

		if (max === null || parseInt(counterInput.value) < max) {
			counterInput.value = parseInt(counterInput.value) + 1;
			updateEndDate();
			validateForm(); // Validate the form whenever counter is incremented
		}
	}

	function decrementCounter() {
		const counterInput = document.getElementById('counter');
		if (parseInt(counterInput.value) > 1) {
			counterInput.value = parseInt(counterInput.value) - 1;
			updateEndDate();
			validateForm(); // Validate the form whenever counter is decremented
		}
	}

	function updateDuration() {
		const holidayType = document.getElementById('holidayType').value;
		const startDateInput = document.getElementById('start_date');
		const endDateInput = document.getElementById('end_date');
		const counterInput = document.getElementById('counter');

		if (holidayType != 4) {
			const startDate = new Date(startDateInput.value);
			const endDate = new Date(endDateInput.value);
			const duration = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));
			counterInput.value = duration;
			validateForm(); // Validate the form whenever duration is updated
		}
	}

	function updateEndDate() {
		const startDateInput = document.getElementById('start_date');
		const endDateInput = document.getElementById('end_date');
		const counterInput = document.getElementById('counter');

		if (startDateInput.value && document.getElementById('holidayType').value != 4) {
			const startDate = new Date(startDateInput.value);
			const durationDays = parseInt(counterInput.value);
			startDate.setDate(startDate.getDate() + durationDays);
			endDateInput.value = startDate.toISOString().split('T')[0];
		}
	}

	function validateForm() {
		const counterInput = document.getElementById('counter');
		const holidayBalanceText = document.getElementById('holidayBalance').textContent.replace('الرصيد المتبقي: ', '');
		const holidayBalance = parseInt(holidayBalanceText.match(/\d+/)); // Extract number
		const submitButton = document.getElementById("submitButton")
		const duration = parseInt(counterInput.value);

		console.log('Duration:', duration); // Debugging
		console.log('Holiday Balance:', holidayBalance); // Debugging

		if (duration <= 0 || holidayBalance <= 0 || isNaN(holidayBalance)) {
			submitButton.disabled = true;
			submitButton.classList.add('bg-gray-400');
			submitButton.classList.remove('bg-primaryButtons');
		} else {
			submitButton.disabled = false;
			submitButton.classList.remove('bg-gray-400');
			submitButton.classList.add('bg-primaryButtons');
		}
	}

</script>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}