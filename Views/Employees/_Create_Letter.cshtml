@model CharityProject.Models.letter
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>خطابات</title>

    <!-- Stylesheets -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

    <!-- Scripts -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <style>
        .custom {
            display: none;
        }

        .dropdown-arrow {
            transition: transform 0.3s ease;
        }

            .dropdown-arrow.rotated {
                transform: rotate(180deg);
            }

        .dropdown-button {
            width: 200px;
            height: 38px;
        }

        .recipient-choice {
            width: 120px;
        }

        .dropdown-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: space-between;
        }

        .warning {
            color: red;
            display: none;
            margin-top: 5px;
        }

        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <div class="modal fade" id="insertLetterModal" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header flex justify-between items-center">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">X</button>
                    <h4 class="modal-title w-full font-bold text-center">إنشاء خطاب جديد</h4>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    <div class="col-md text-right" dir="rtl">
                        <form id="letterForm" asp-action="Create_Letter" method="post" enctype="multipart/form-data">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <!-- Title -->
                            <div class="mb-3">
                                <label asp-for="title" class="block text-sm font-medium font-bold text-gray-700">موضوع الخطاب</label>
                                <input asp-for="title" required type="text" id="title" name="title" class="mt-1 p-2 w-full border rounded-md focus:ring-blue-500 focus:border-blue-500">
                            </div>

                            <!-- Date and Type -->
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-3">
                                <div>
                                    <label asp-for="date" class="block text-sm font-bold text-gray-700 text-right">التاريخ</label>
                                    <input type="date" asp-for="date" id="date" name="date" class="mt-1 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                </div>
                                <div>
                                    <label asp-for="type" class="block text-sm font-bold text-gray-700 text-right">نوع الخطاب</label>
                                    <select asp-for="type" required id="type" name="type" class="mt-1 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                        <option value="عام" selected>عام</option>
                                        <option value="مخصص">مخصص</option>
                                        <option value="تظلم">تظلم</option>
                                    </select>
                                </div>
                            </div>

                            <!-- Dropdown Containers -->
                            <div id="dropdownContainer" class="dropdown-container flex flex-col md:flex-row gap-4">
                                <!-- Department Dropdown -->
                                <div id="departmentDropdownUnique" class="relative flex-1">
                                    <label for="departmentDropdownButtonUnique" class="block font-bold text-gray-700 mb-1">القسم</label>
                                    <button id="departmentDropdownButtonUnique" type="button" class="w-full p-2 text-left text-gray-800 bg-gray-200 hover:bg-gray-300 focus:ring-2 focus:ring-gray-300 focus:outline-none font-medium rounded-lg text-sm flex items-center justify-between">
                                        <span>--اختر القسم--</span>
                                        <svg class="w-4 h-4 transition-transform duration-200 dropdown-arrow" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4" />
                                        </svg>
                                    </button>
                                    <div id="departmentDropdownUniqueList" class="hidden absolute z-10 w-full mt-1 bg-white rounded-lg shadow-lg">
                                        <button id="selectAllDepartments" class="w-full text-right px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 ">الكل</button>
                                        <ul class="py-2 max-h-60 overflow-y-auto">
                                            @foreach (var item in ViewData["Departments"] as IEnumerable<SelectListItem>)
                                            {
                                                <li class="px-3 py-1">
                                                    <label class="flex items-center hover:bg-gray-100 p-2 rounded cursor-pointer">
                                                        <input id="dept-@item.Value" name="to_departement_name" type="checkbox" value="@item.Value" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500">
                                                        <span class="ml-2 text-sm text-gray-900">@item.Text</span>
                                                    </label>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                    <div id="departmentWarningUnique" class="warning">الرجاء اختيار قسم واحد على الأقل</div>
                                </div>

                                <!-- Employee Dropdown -->
                                <div id="employeeDropdownUnique" class="relative flex-1">
                                    <label for="employeeDropdownButtonUnique" class="block font-bold text-gray-700 mb-1">الموظف</label>
                                    <button id="employeeDropdownButtonUnique" type="button" class="w-full p-2 text-left text-gray-800 bg-gray-200 hover:bg-gray-300 focus:ring-2 focus:ring-gray-300 focus:outline-none font-medium rounded-lg text-sm flex items-center justify-between">
                                        <span>--اختر الموظف--</span>
                                        <svg class="w-4 h-4 transition-transform duration-200 dropdown-arrow" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4" />
                                        </svg>
                                    </button>
                                    <div id="employeeDropdownUniqueList" class="hidden absolute z-10 w-full mt-1 bg-white rounded-lg shadow-lg">
                                        <button id="selectAllEmployees" class="w-full text-right px-3 py-2 text-sm text-gray-700 hover:bg-gray-100">الكل</button>
                                        <ul id="employeeList" class="py-2 max-h-60 overflow-y-auto">
                                            <!-- Employee list will be populated dynamically -->
                                        </ul>
                                    </div>
                                    <div id="employeeWarningUnique" class="warning">الرجاء اختيار موظف واحد على الأقل</div>
                                </div>
                            </div>

                            <!-- Notes -->
                            <div class="mb-3">
                                <label asp-for="description" class="block text-sm font-bold text-gray-700">الملاحظات</label>
                                <textarea asp-for="description" id="description" name="description" class="mt-1 p-2 w-full border rounded-md focus:ring-blue-500 focus:border-blue-500"></textarea>
                            </div>

                            <!-- Attachments -->
                            <div class="mb-3">
                                <div class="form-group mb-4">
                                    <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white" for="files">المرفقات</label>
                                    <input name="files" class="form-control w-full border rounded focus:ring-blue-500 focus:border-blue-500"
                                           type="file" accept=".pdf,.xls,.xlsx,.doc,.docx" multiple id="fileInput" />
                                    <span asp-validation-for="files" class="text-danger"></span>
                                    <small id="fileError" class="text-danger" style="display:none;">الملفات المسموح بها فقط :PDF, Excel, Word</small>

                                    <!-- Added container to display file names -->
                                    <ul id="fileList" class="mt-2"></ul>
                                </div>
                            </div>


                            <!-- Confidentiality, Urgency, Importance -->
                            <div class="flex justify-between">
                                <div class="mb-4 p-">
                                    <label for="Confidentiality" class="block text-gray-700 font-bold mb-2">
                                        <i class="fas fa-lock"></i> سرية الخطاب
                                    </label>
                                    <input type="radio" asp-for="Confidentiality" name="Confidentiality" value="سري" /> سري <br />
                                    <input type="radio" asp-for="Confidentiality" name="Confidentiality" value="غير سري" /> غير سري
                                </div>
                                <div class="mb-4 p-">
                                    <label for="Urgency" class="block text-gray-700 font-bold mb-2">
                                        <i class="fas fa-clock text-green-500"></i> أعجلية الخطاب
                                    </label>
                                    <input type="radio" asp-for="Urgency" name="Urgency" value="غير عاجل" /> غير عاجل <br />
                                    <input type="radio" asp-for="Urgency" name="Urgency" value="عاجل" /> عاجل <br />
                                    <input type="radio" asp-for="Urgency" name="Urgency" value="حالاً" /> حالاً
                                </div>
                                <div class="mb-4 p-">
                                    <label for="Importance" class="block text-gray-700 font-bold mb-2">
                                        <i class="fas fa-exclamation-circle text-red-500"></i> أهمية الخطاب
                                    </label>
                                    <input type="radio" asp-for="Importance" name="Importance" value="عادي" /> عادي <br />
                                    <input type="radio" asp-for="Importance" name="Importance" value="هام" /> هام
                                </div>
                            </div>

                            <!-- Submit Button -->
                            <div class="flex justify-center">
                                <button type="submit" class="bg-gradient-to-r from-green-400 via-green-500 to-green-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center text-white">رفع الخطاب</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

</body>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get the letter form to scope the script only to the letter partial view.
        var letterForm = document.getElementById('letterForm');
        if (!letterForm) {
            return; // Exit if the form isn't found
        }

        // Select the title and description fields within the letter form
        var titleInput = letterForm.querySelector('#title');
        var descriptionInput = letterForm.querySelector('#description');

        // Define maximum number of characters allowed for each field
        var titleMax = 255;
        var descriptionMax = 1000;

        // Create counter elements for title and description
        var titleCounter = document.createElement('span');
        titleCounter.className = 'char-counter';
        titleCounter.style.display = 'block';
        titleCounter.style.textAlign = 'right';
        titleCounter.style.marginTop = '5px';
        titleCounter.style.color = 'gray';

        var descriptionCounter = document.createElement('span');
        descriptionCounter.className = 'char-counter';
        descriptionCounter.style.display = 'block';
        descriptionCounter.style.textAlign = 'right';
        descriptionCounter.style.marginTop = '5px';
        descriptionCounter.style.color = 'gray';

        // Insert the counter elements just after the respective input fields
        titleInput.insertAdjacentElement('afterend', titleCounter);
        descriptionInput.insertAdjacentElement('afterend', descriptionCounter);

        // Helper function to update a counter element, enforce the max character limit, and show remaining characters.
        function updateCounter(inputElement, counterElement, maxCount) {
            var count = inputElement.value.length;
            if (count > maxCount) {
                // Trim any characters exceeding the max count
                inputElement.value = inputElement.value.substring(0, maxCount);
                count = maxCount;
            }
            var remaining = maxCount - count;
            counterElement.textContent = "عدد الأحرف المتبقية: " + remaining;
        }

        // Bind input event listeners to update the counters and enforce limits on the fly
        titleInput.addEventListener('input', function () {
            updateCounter(titleInput, titleCounter, titleMax);
        });
        descriptionInput.addEventListener('input', function () {
            updateCounter(descriptionInput, descriptionCounter, descriptionMax);
        });

        // Initialize counters on page load
        updateCounter(titleInput, titleCounter, titleMax);
        updateCounter(descriptionInput, descriptionCounter, descriptionMax);
    });

    document.getElementById('transactionForm').addEventListener('submit', function (e) {
        var fileInput = document.getElementById('files');
        var allowedExtensions = /(\.pdf|\.xls|\.xlsx|\.doc|\.docx)$/i;
        var fileError = document.getElementById('fileError');
        fileError.style.display = 'none';

        if (fileInput.files.length > 0) {
            for (var i = 0; i < fileInput.files.length; i++) {
                var file = fileInput.files[i];
                if (!allowedExtensions.exec(file.name)) {
                    fileError.style.display = 'block';
                    e.preventDefault();
                    return;
                }
            }
        }
    });
    document.getElementById('fileInput').addEventListener('change', function () {
        var fileList = document.getElementById('fileList');
        fileList.innerHTML = ''; // Clear the list first

        // Loop through all selected files and display their names
        for (var i = 0; i < this.files.length; i++) {
            var listItem = document.createElement('li');
            listItem.textContent = this.files[i].name; // Add file name
            fileList.appendChild(listItem);
        }
    });
    document.getElementById('type').addEventListener('change', function () {
        this.blur();
        toggleElements();
    });

    // Set the date input to today's date
    document.addEventListener('DOMContentLoaded', function () {
        const today = new Date().toISOString().split('T')[0];
        document.getElementById('date').value = today;
        toggleElements(); // Call this to set the initial state
    });

    function toggleElements() {
        const selectedType = document.getElementById('type').value;
        const departmentDropdownContainer = document.getElementById('departmentDropdownUnique');
        const employeeDropdownContainer = document.getElementById('employeeDropdownUnique');
        const dropdownContainer = document.getElementById('dropdownContainer');

        console.log('Current Type:', selectedType);  // Debugging

        if (selectedType === 'عام') {
            departmentDropdownContainer.style.display = 'block';
            employeeDropdownContainer.style.display = 'none';
            dropdownContainer.style.justifyContent = 'flex-start';
        } else if (selectedType === 'مخصص') {
            departmentDropdownContainer.style.display = 'block';
            employeeDropdownContainer.style.display = 'block';
            dropdownContainer.style.justifyContent = 'space-between';
        } else if (selectedType === 'تظلم') {
            departmentDropdownContainer.style.display = 'none';
            employeeDropdownContainer.style.display = 'none';
        }
    }

    // Toggle department dropdown
    document.getElementById('departmentDropdownButtonUnique').addEventListener('click', function () {
        document.getElementById('departmentDropdownUniqueList').classList.toggle('hidden');
        this.querySelector('.dropdown-arrow').classList.toggle('rotated');
    });

    // Toggle employee dropdown
    document.getElementById('employeeDropdownButtonUnique').addEventListener('click', function () {
        document.getElementById('employeeDropdownUniqueList').classList.toggle('hidden');
        this.querySelector('.dropdown-arrow').classList.toggle('rotated');
    });

    // Select all departments
    document.getElementById('selectAllDepartments').addEventListener('click', function (event) {
        event.preventDefault(); // Prevent form submission when clicking "الكل"
        const checkboxes = document.querySelectorAll('input[name="to_departement_name"]');
        const allChecked = Array.from(checkboxes).every(cb => cb.checked);
        checkboxes.forEach(cb => cb.checked = !allChecked);
        fetchEmployees();
    });

    // Select all employees
    document.getElementById('selectAllEmployees').addEventListener('click', function (event) {
        event.preventDefault(); // Prevent form submission when clicking "الكل"
        const checkboxes = document.querySelectorAll('input[name="to_emp_id"]');
        const allChecked = Array.from(checkboxes).every(cb => cb.checked);
        checkboxes.forEach(cb => cb.checked = !allChecked);
    });

    // Fetch employees dynamically based on selected departments
    document.querySelectorAll('input[name="to_departement_name"]').forEach(checkbox => {
        checkbox.addEventListener('change', fetchEmployees);
    });

    function fetchEmployees() {
        const selectedDepartments = Array.from(document.querySelectorAll('input[name="to_departement_name"]:checked')).map(cb => cb.value);

        if (selectedDepartments.length === 0) {
            document.getElementById('employeeList').innerHTML = '';
            return;
        }

        fetch('/Employees/GetEmployeesByDepartmentName?departmentNames=' + selectedDepartments.join('&departmentNames='), {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            }
        })
            .then(response => response.json())
            .then(data => displayEmployees(data))
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('employeeList').innerHTML = 'لا يوجد موظفين.';
            });
    }

    function displayEmployees(employees) {
        const employeeList = document.getElementById('employeeList');
        if (employees.length === 0) {
            employeeList.innerHTML = 'لايوجد موظفين';
            return;
        }

        let html = '';
        employees.forEach(employee => {
            html += `
                        <li>
                            <div class="flex items-center p-2 rounded hover:bg-gray-100">
                                <input id="emp-${employee.employee_id}" name="to_emp_id" type="checkbox" value="${employee.employee_id}" class="w-4 h-4 text-gray-600 bg-gray-100 border-gray-300 rounded focus:ring-gray-500">
                                <label for="emp-${employee.employee_id}" class="w-full ms-2 text-sm font-medium text-gray-900">${employee.name} (${employee.position})</label>
                            </div>
                        </li>
                    `;
        });

        employeeList.innerHTML = html;
    }

    // Form submission handling
    document.getElementById('letterForm').addEventListener('submit', function (event) {
        event.preventDefault(); // Prevent form submission until validation is complete

        const type = document.getElementById('type').value;
        const departmentSelected = document.querySelectorAll('input[name="to_departement_name"]:checked').length > 0;
        const employeeSelected = document.querySelectorAll('input[name="to_emp_id"]:checked').length > 0;

        const departmentWarning = document.getElementById('departmentWarningUnique');
        const employeeWarning = document.getElementById('employeeWarningUnique');

        departmentWarning.style.display = 'none'; // Hide department warning initially
        employeeWarning.style.display = 'none';   // Hide employee warning initially

        let isValid = true;

        // Validate based on the selected type
        if (type === 'عام') {
            // For "عام", at least one department must be selected
            if (!departmentSelected) {
                departmentWarning.style.display = 'block'; // Show department warning
                isValid = false;
            }
        } else if (type === 'مخصص') {
            // For "مخصص", both department and employee must be selected
            if (!departmentSelected) {
                departmentWarning.style.display = 'block'; // Show department warning
                isValid = false;
            }
            if (!employeeSelected) {
                employeeWarning.style.display = 'block'; // Show employee warning
                isValid = false;
            }
        }

        // Only submit if the form is valid
        if (isValid) {
            this.submit(); // Proceed with form submission
        }
    });
</script>

</html>