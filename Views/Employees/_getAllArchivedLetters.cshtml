@model IEnumerable<CharityProject.Models.letter>

<div class="p-2 rounded-lg shadow" style="max-height: 750px; overflow-y: auto;">
    <ul class="w-full divide-y divide-gray-200 dark:divide-gray-700">
        @foreach (var item in Model)
        {
            <li class="mb-2 shadow-sm bg-white">
                <div class="flex items-center space-x-4 rtl:space-x-reverse text-center">
                    <div class="flex-shrink-0 border-2 m-2 ml-3 p-3">
                        <p class="text-blue-600">
                            #@Html.DisplayFor(modelItem => item.letters_id)
                        </p>
                    </div>
                    <div class="flex-1 min-w-0 text-xl text-right">
                        <div class="flex">
                            <p class="font-medium text-gray-900 truncate dark:text-white px-2">
                                @Html.DisplayFor(modelItem => item.title)
                            </p>
                            <p class="font-medium text-gray-900 truncate dark:text-white">
                                بتاريخ: @Html.DisplayFor(modelItem => item.date)
                            </p>
                        </div>
                        <p class="text-gray-500 truncate dark:text-gray-400">
                            @Html.DisplayFor(modelItem => item.description)
                        </p>
                        <!-- Confidentiality, Urgency, Importance -->
                        <div class="flex w-fit mb-1">
                            @if (ViewBag.EmployeeNames != null)
                            {
                                <p class="text-base ml-4">
                                    بواسطة:
                                    @{
                                        string fromName;
                                        var employeeNames = ViewBag.EmployeeNames as Dictionary<int, string>;
                                        if (employeeNames != null && employeeNames.TryGetValue(item.from_emp_id, out fromName))
                                        {
                                            @fromName
                                        }
                                        else
                                        {
                                            <text>Unknown Employee (ID: @item.from_emp_id)</text>
                                        }
                                    }
                                </p>
                            }
                            <div class="flex p-1 bg-gray-100 rounded-md items-center text-sm mr-4">
                                <i class="fas fa-lock text-xs ml-1"></i>
                                <span class="text-gray-700">سري</span>
                            </div>
                            <div class="flex p-1 bg-gray-100 rounded-md items-center text-sm mr-4">
                                <i class="fas fa-clock text-green-500 text-xs ml-1"></i>
                                <span class="text-gray-700">عاجلة</span>
                            </div>
                            <div class="flex p-1 bg-gray-100  rounded-md items-center text-sm mr-4">
                                <i class="fas fa-exclamation-circle text-red-500 text-xs ml-1"></i>
                                <span class="text-gray-700">هام</span>
                            </div>
                        </div>
                    </div>
                    <div class="inline-flex items-center text-base font-semibold text-gray-900 ml-3 dark:text-white">
                        <button type="button" class="btn btn-dark" data-toggle="modal" data-target="@($"#detailModal-{item.letters_id}")">
                            عرض
                        </button>
                        @await Html.PartialAsync("_ShowLetterDetail", item)
                    </div>
                </div>
            </li>
        }
    </ul>
</div>
