@model CharityProject.Models.Transaction

@{
    ViewData["Title"] = "Transaction Details";
    string currentUrl = Context.Request.Path;
    var fileNames = Model.files?.Split(',') ?? new string[] { };

}

<div class="modal fade" id="detailModal-@Model.transaction_id" role="dialog" data-transaction-id="@Model.transaction_id">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header flex justify-content-center">
                <h4>معلومات المعاملة  #@Model.transaction_id</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <!-- Right section for transaction details -->
                    <div class="col-md-5" dir="rtl">
                        <h5>تفاصيل المعاملة</h5>
                        <hr class="w-48 h-1 mx-auto my-2 bg-gray-950 border-2 rounded md:my-10 dark:bg-gray-800">
                        <dl class="row text-right">
                            <dt class="col-sm-4">العنوان</dt>
                            <dd class="col-sm-8">@Html.DisplayFor(model => model.title)</dd>
                            <dt class="col-sm-4">الوصف</dt>
                            <dd class="col-sm-8">@Html.DisplayFor(model => model.description)</dd>
                            @{
                                var employeeNames = ViewBag.EmployeeNames as Dictionary<int, string>;
                            }

                            <dt class="col-sm-4">من الموظف</dt>
                            <dd class="col-sm-8">
                                @(employeeNames.TryGetValue(Model.from_emp_id, out var fromName) ? fromName : "غير معروف")
                            </dd>
                            @if (Model.to_emp_id != null)
                            {
                                <dt class="col-sm-4">الى الموظف</dt>
                                <dd class="col-sm-8">
                                    @(employeeNames.TryGetValue(Model.to_emp_id ?? 0, out var toName) ? toName : "غير معروف")
                                </dd>
                            }
                            <dt class="col-sm-4">الى قسم</dt>
                            <dd class="col-sm-8">@Html.DisplayFor(model => model.Department.departement_name)</dd>

                            <dt class="col-sm-4">تاريخ الانشاء</dt>
                            <dd class="col-sm-8">@Model.create_date?.ToString("yyyy-MM-dd")</dd>

                            @if (Model.close_date != null)
                            {
                                <dt class="col-sm-4">تاريخ الانهاء</dt>
                                <dd class="col-sm-8">@Model.close_date?.ToString("yyyy-MM-dd")</dd>
                            }
                            <dt class="col-sm-4">الحالة</dt>
                            <dd class="col-sm-8">@Html.DisplayFor(model => model.status)</dd>
                            @if (Model.TerminationCause != null)
                            {
                                <dt class="col-sm-4">سبب الانهاء</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.TerminationCause)</dd>
                            }
                            <dt class="col-sm-4">المرفقات</dt>
                            <dd class="col-sm-8">
                                @if (fileNames.Any())
                                {
                                    foreach (var fileName in fileNames)
                                    {
                                        var fileUrl = Url.Content($"~/files/{fileName.Trim()}");
                                        <a href="@fileUrl" target="_blank">@fileName.Trim()</a>
                                        <br />
                                    }
                                }
                                else
                                {
                                    <span>لا توجد مرفقات</span>
                                }
                            </dd>
                        </dl>
                    </div>

                    <!-- Left section for referrals details -->
                    <div class="col-md-7" dir="rtl">
                        <h5>تفاصيل الإحالات</h5>
                        <hr class="w-48 h-1 mx-auto my-2 bg-gray-950 border-2 rounded md:my-10 dark:bg-gray-800">

                        @if (Model.Referrals != null && Model.Referrals.Any())
                        {
                            <!-- Set overflow-auto to allow scrolling -->
                            <div class="border border-gray-300 shadow-sm rounded-lg overflow-auto max-h-96">
                                <!-- Table structure -->
                                <table class="w-full text-sm leading-5">
                                    <thead class="bg-gray-100">
                                        <tr>
                                            <th class="py-3 px-4 text-right font-medium text-gray-600">تاريخ الإحالة</th>
                                            <th class="py-3 px-4 text-right font-medium text-gray-600">من الموظف</th>
                                            <th class="py-3 px-4 text-right font-medium text-gray-600">إلى الموظف</th>
                                            <th class="py-3 px-4 text-right font-medium text-gray-600">التعليقات</th>
                                            <th class="py-3 px-4 text-right font-medium text-gray-600">المرفقات</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            var index = 0;
                                            foreach (var referral in Model.Referrals.OrderByDescending(r => r.referral_date))
                                            {
                                                var rowClass = index % 2 == 0 ? "" : "bg-gray-50";
                                                var referralFileNames = referral.files?.Split(',') ?? new string[] { }; // Handle multiple files
                                                <tr class="@rowClass">
                                                    <td class="py-3 px-4 text-right">@referral.referral_date.ToString("yyyy/MM/dd - HH:mm")</td>
                                                    <td class="py-3 px-4 text-right">
                                                        @if (referral.from_employee == null)
                                                        {
                                                            <span class="text-red-500">موظف غير موجود (ID: @referral.from_employee_id)</span>
                                                        }
                                                        else
                                                        {
                                                            @referral.from_employee.name
                                                        }
                                                    </td>
                                                    <td class="py-3 px-4 text-right">
                                                        @if (referral.to_employee == null)
                                                        {
                                                            <span class="text-red-500">موظف غير موجود (ID: @referral.to_employee_id)</span>
                                                        }
                                                        else
                                                        {
                                                            @referral.to_employee.name
                                                        }
                                                    </td>
                                                    <td class="py-3 px-4 text-right">@referral.comments</td>
                                                    <td class="py-3 px-4 text-right">
                                                        @if (referralFileNames.Any())
                                                        {
                                                            foreach (var fileName in referralFileNames)
                                                            {
                                                                var fileUrl = Url.Content($"~/files/{fileName.Trim()}");
                                                                <a href="@fileUrl" target="_blank">@fileName.Trim()</a>
                                                                <br />
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <span>لا توجد مرفقات</span>
                                                        }
                                                    </td>
                                                </tr>
                                                index++;
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <p>لا توجد إحالات لهذه المعاملة.</p>
                        }
                    </div>
                    @if (!currentUrl.Contains("GetAllTransactionsArchive"))
                    {
                        <div id="referForm-@Model.transaction_id" class="mt-4">
                            <h5>إحالة المعاملة #@Model.transaction_id</h5>
                            @using (Html.BeginForm("ReferTransaction", "HR", FormMethod.Post, new { id = $"referTransactionForm-{Model.transaction_id}", enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.transaction_id)
                                <div class="form-group">
                                    <label for="department_id">القسم:</label>
                                    <select id="department_id" name="department_id" class="form-control" required>
                                        <option value="">اختر القسم</option>
                                        @foreach (var dept in ViewBag.Departments)
                                        {
                                            <option value="@dept.Value">@dept.Text</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="to_employee_id">إحالة إلى الموظف:</label>
                                    <select name="to_employee_id" id="to_employee_id" class="form-control" required>
                                        <option value="">اختر الموظف</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="comments">توجيهات الإحالة:</label>
                                    <textarea name="comments" id="comments" class="form-control" required></textarea>
                                </div>
                                <div class="form-group">
                                    <label for="fileInput" class="block text-gray-700">مرفقات الإحالة</label>
                                    <input type="file" id="files" name="files" accept=".pdf,.xls,.xlsx,.doc,.docx" multiple class="block mt-2" />
                                    <ul id="fileList" class="mt-2 flex flex-wrap gap-2 p-2 border border-gray-300 rounded-lg shadow-sm"></ul>
                                </div>
                                @if (Model.status != "منهاة")
                                {
                                    <button type="submit" class="btn btn-primary">تأكيد الإحالة</button>
                                    @using (Html.BeginForm("UpdateTransactionStatus", "HR", FormMethod.Post, new { id = $"updateStatusForm-{Model.transaction_id}", @class = "d-inline" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#confirmEndModal-@Model.transaction_id">
                                            إنهاء المعاملة
                                        </button>

                                        @Html.HiddenFor(model => model.transaction_id)
                                        <button data-dismiss="modal" type="button" class="px-4 py-2 text-sm font-medium text-white bg-gray-500 rounded-md hover:bg-gray-600 focus:outline-none focus:ring-4 focus:ring-gray-300 transition duration-300">
                                            إخفاء
                                        </button>
                                    }
                                }
                            }

                        </div>
                    }
                    else
                    {
                        <div>
                            <button type="button" class="btn btn-dark" data-dismiss="modal">إخفاء</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Confirmation Modal -->
    <div class="modal fade" id="confirmEndModal-@Model.transaction_id" tabindex="-1" role="dialog" aria-labelledby="confirmEndLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmEndLabel">تأكيد إنهاء المعاملة</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("UpdateTransactionStatus", "HR", FormMethod.Post, new { id = $"confirmEndForm-{Model.transaction_id}" }))
                {
                    <div class="modal-body">
                        <label for="TerminationCause">سبب الإنهاء</label>
                        <textarea name="TerminationCause" id="TerminationCause" class="form-control" required></textarea>
                    </div>
                    <div class="modal-footer justify-center">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">إلغاء</button>
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.transaction_id)
                        <button type="submit" class="btn btn-primary">تأكيد</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Modal Script and Form -->
    <script>
        $(document).ready(function () {
            // Department selection handler for dynamic employee dropdown population
            $(document).off('change', '#department_id').on('change', '#department_id', function () {
                var departmentId = $(this).val();
                var employeeDropdown = $(this).closest('form').find('#to_employee_id');
                employeeDropdown.empty();
                employeeDropdown.append('<option value="">اختر الموظف</option>');

                if (departmentId) {
                    $.ajax({
                        url: '@Url.Action("GetEmployeesByDepartment", "HR")',
                        type: 'GET',
                        data: { departmentId: departmentId },
                        success: function (data) {
                            if (Array.isArray(data) && data.length > 0) {
                                $.each(data, function (index, item) {
                                    employeeDropdown.append($('<option></option>')
                                        .val(item.employee_id)
                                        .text(item.name + ' - ' + item.position));
                                });
                            } else {
                                employeeDropdown.append($('<option></option>').val('').text(data.message || 'لا يوجد موظفين في هذا القسم'));
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching employees:", error);
                            employeeDropdown.append($('<option></option>').val('').text('حدث خطأ أثناء جلب الموظفين'));
                        }
                    });
                }
            });

            // Fetch department name when modal is shown
            $(document).on('shown.bs.modal', '[id^=detailModal]', function () {
                var transactionId = $(this).data('transaction-id');
                var departmentId = $(this).find('#department_id').val();

                if (departmentId) {
                    $.ajax({
                        url: '@Url.Action("GetDepartmentName", "HR")',
                        type: 'GET',
                        data: { departmentId: departmentId },
                        success: function (data) {
                            $('#department-name-' + transactionId).text(data);
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching department name:", error);
                            $('#department-name-' + transactionId).text("غير معروف");
                        }
                    });
                }
            });

            // File input management
            $('#fileInput').on('change', function () {
                var fileList = $('#fileList');
                fileList.empty(); // Clear previous file list

                for (var i = 0; i < this.files.length; i++) {
                    var file = this.files[i];
                    var listItem = $('<li></li>')
                        .addClass('flex items-center p-2 bg-white border border-gray-300 rounded-md shadow-sm');
                    var fileName = $('<span></span>').text(file.name).addClass('mr-2');
                    var removeButton = $('<button type="button" class="bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center">X</button>');

                    removeButton.on('click', function () {
                        var listItem = $(this).parent();
                        var fileName = listItem.find('span').text().trim();

                        // Remove file from file input
                        var dataTransfer = new DataTransfer();
                        var input = $('#fileInput')[0];

                        for (var i = 0; i < input.files.length; i++) {
                            if (input.files[i].name !== fileName) {
                                dataTransfer.items.add(input.files[i]);
                            }
                        }

                        input.files = dataTransfer.files;

                        listItem.remove();
                    });

                    listItem.append(fileName).append(removeButton);
                    fileList.append(listItem);
                }
            });

            // Validate file types on form submission
            $('#referTransactionForm').on('submit', function (e) {
                var fileInput = document.getElementById('fileInput');
                var allowedExtensions = /(\.pdf|\.xls|\.xlsx|\.doc|\.docx)$/i;
                var fileError = document.getElementById('fileError');
                fileError.style.display = 'none';

                if (fileInput.files.length > 0) {
                    for (var i = 0; i < fileInput.files.length; i++) {
                        var file = fileInput.files[i];
                        if (!allowedExtensions.exec(file.name)) {
                            fileError.style.display = 'block';
                            e.preventDefault();
                            return;
                        }
                    }
                }
            });
        });
    </script>

