<div class="bg-white overflow-hidden shadow rounded-lg border">
    <div class="px-4 py-2 sm:px-6 justify-center flex">
        <svg class="h-20 w-20 rounded-full bg-gray-200" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
            <path d="M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512H418.3c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304H178.3z" />
        </svg>
    </div>

    <h3 class="text-lg leading-6 font-medium text-gray-900 text-center">
        الملف الشخصي
    </h3>

    <div class="border-t border-gray-200 px-4 py-2 sm:p-0">
        <!-- Alerts -->
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded" role="alert">
                <strong class="font-bold">خطأ: </strong>
                <span>@TempData["ErrorMessage"]</span>
            </div>
        }
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded" role="alert">
                <strong class="font-bold">نجاح: </strong>
                <span>@TempData["SuccessMessage"]</span>
            </div>
        }

        <!-- Profile Details -->
        <dl class="sm:divide-y sm:divide-gray-200">
            @foreach (var detail in new[] { 
                new { Label = "الاسم", Value = @Context.Session.GetString("Name") }, 
                new { Label = "القسم", Value = @Context.Session.GetString("DepartmentName") }, 
                new { Label = "المنصب", Value = @Context.Session.GetString("Position") },
            new { Label = "الرقم الوظيفي", Value = @Context.Session.GetString("EmployeeNumber") }
            })
            {
                <div class="py-3 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                    <dt class="font-medium text-gray-900 text-right">@detail.Label</dt>
                    <dd class="mt-1 text-gray-800 sm:mt-0 sm:col-span-2 text-right">@detail.Value</dd>
                </div>
            }
        </dl>

        <!-- Change Password Button -->
        <div class="flex justify-center mt-6">
            <button onclick="togglePasswordForm()"
                    class="py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium rounded-md shadow">
                تفيير كلمة المرور
            </button>
        </div>
    </div>

    <!-- Password Form (Initially Hidden) -->
<div id="passwordFormDiv" class="border-t px-4 py-6 sm:px-8 bg-gray-50 rounded-lg text-right" style="display: none;">
    <h3 class="text-lg font-semibold text-gray-800 text-center mb-6">
        تغيير كلمة المرور
    </h3>
                <span id="passwordChangeSuccess" class="text-green-500 hidden"></span>
            <span id="currentPasswordError" class="text-red-500 hidden"></span>
    <form id="passwordForm" method="post" class="space-y-4">
        <!-- Current Password -->
        <div>
            <label for="current_password" class="block text-sm font-medium text-gray-600 mb-1">
                كلمة المرور الحالية
            </label>
            <input id="current_password_input" name="current_password" type="password" required
                   class="w-full shadow-sm sm:text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
        </div>
        <!-- New Password -->
        <div>
            <label for="new_password" class="block text-sm font-medium text-gray-600 mb-1">
                كلمة المرور الجديدة
            </label>
            <input id="new_password" name="new_password" type="password" required
                   class="w-full shadow-sm sm:text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
        </div>
        <!-- Confirm Password -->
        <div>
            <label for="confirm_password" class="block text-sm font-medium text-gray-600 mb-1">
                تأكيد كلمة المرور الجديدة
            </label>
            <input id="confirm_password" name="confirm_password" type="password" required
                   class="w-full shadow-sm sm:text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
        </div>
        <!-- Submit Button -->
        <div class="text-center">
            <button type="submit"
                    class="py-2 px-6 bg-green-600 text-white text-sm font-medium rounded-md shadow hover:bg-green-700 focus:ring focus:ring-green-500 focus:outline-none">
                تحديث كلمة المرور
            </button>
        </div>

        <!-- Success and Error Messages -->
        <div class="mt-4">
            <span id="passwordChangeSuccess" class="text-green-500 hidden"></span>
            <span id="currentPasswordError" class="text-red-500 hidden"></span>
        </div>
    </form>
</div>
</div>

<script>
    // Toggles the visibility of the password form
    function togglePasswordForm() {
        const formDiv = document.getElementById('passwordFormDiv');
        formDiv.style.display = (formDiv.style.display === "none" || formDiv.style.display === "") ? "block" : "none";
    }

    // Handles the password form submission
    document.getElementById("passwordForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent form submission

        const currentPassword = document.getElementById("current_password_input").value;
        const newPassword = document.getElementById("new_password").value;
        const confirmPassword = document.getElementById("confirm_password").value;

        // Clear any previous error or success message
        const errorMessage = document.getElementById("currentPasswordError");
        const successMessage = document.getElementById("passwordChangeSuccess");
        errorMessage.classList.add("hidden");
        errorMessage.textContent = '';
        successMessage.classList.add("hidden");
        successMessage.textContent = '';

        // Validate if new password matches confirm password
        if (newPassword !== confirmPassword) {
            errorMessage.textContent = "كلمة المرور الجديدة غير متطابقة";
            errorMessage.classList.remove("hidden");
            return;
        }

        // Validate the new password (minimum length, contains numbers and special characters)
        const passwordValidationError = validatePassword(newPassword);
        if (passwordValidationError) {
            errorMessage.textContent = passwordValidationError;
            errorMessage.classList.remove("hidden");
            return;
        }

        // Send the current password to the server for verification
        fetch('@Url.Action("VerifyCurrentPassword", "Home")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(currentPassword)
        })
            .then(response => response.json())
            .then(data => {
                // Handle the server response for current password verification
                if (data.message === "كلمة المرور صحيحة") {
                    // Now send the new password to the server to change it
                    fetch('@Url.Action("ChangePassword", "Home")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(newPassword)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                successMessage.textContent = 'تم تغيير كلمة المرور بنجاح';
                                successMessage.classList.remove("hidden");

                                // Wait for 2 seconds before redirecting to the login page
                                setTimeout(function() {
                                    window.location.href = '@Url.Action("LoginPage", "Home")';  // Redirect to login page
                                }, 2000);  // 2-second delay
                            } else {
                                errorMessage.textContent = data.message || "حدث خطأ أثناء تغيير كلمة المرور";
                                errorMessage.classList.remove("hidden");
                            }
                        })
                    .catch(error => {
                        console.error('Error:', error);
                        errorMessage.textContent = "حدث خطأ، يرجى المحاولة لاحقاً";
                        errorMessage.classList.remove("hidden");
                    });
                } else {
                    errorMessage.textContent = "كلمة المرور غير صحيحة";
                    errorMessage.classList.remove("hidden");
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });


// Function to validate the new password
function validatePassword(password) {
    // Check for minimum length
    if (password.length < 8) {
        return "كلمة المرور يجب أن تكون على الأقل 8 أحرف";
    }
    // Check for numbers
    if (!/\d/.test(password)) {
        return "كلمة المرور يجب أن تحتوي على رقم واحد على الأقل";
    }
    
    // Check for uppercase letter
    if (!/[A-Z]/.test(password)) {
        return "كلمة المرور يجب أن تحتوي على حرف كبير واحد على الأقل";
    }
    return null; // No validation errors
}



</script>
